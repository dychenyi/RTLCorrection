//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Nov 12 01:54:01 2018
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
signed_add_32                 2                             
signed_multiply_32            1                             
signed_subtract_32            1                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %s.i.0, al... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* %s.i.0, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %s.i.0, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__2
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %indvar.next5 = add i32 %ind... (idx: 0)        10                            10                            10                            10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %indvar.next5 = add i32 %ind... (idx: 0)        1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %indvar.next5 = add i32 %ind... (idx: 0) -> main_signed_add_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %33, i32* %5, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %32, i32* %4, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %33, i32* %5, alig... (idx: 0)        16                            20                            
  store i32 %32, i32* %4, alig... (idx: 1)        16                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %33, i32* %5, alig... (idx: 0)        1                             0                             
  store i32 %32, i32* %4, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %33, i32* %5, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  store i32 %32, i32* %4, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__19
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %i.01 = add i32 %indvar, 1 can share an output register with another operation already assigned to main_signed_add_32_0
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %i.01 = add i32 %indvar, 1 (idx: 0)             6                             10                            10                            10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %i.01 = add i32 %indvar, 1 (idx: 0)             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %i.01 = add i32 %indvar, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %31, i32* %6, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %31, i32* %6, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %30, i32* %7, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %30, i32* %7, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %31, i32* %6, alig... (idx: 0)        18                            17                            
  store i32 %30, i32* %7, alig... (idx: 1)        18                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %31, i32* %6, alig... (idx: 0)        1                             0                             
  store i32 %30, i32* %7, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %31, i32* %6, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  store i32 %30, i32* %7, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %29, i32* %8, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %29, i32* %8, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %28, i32* %9, alig... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %28, i32* %9, alig... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %29, i32* %8, alig... (idx: 0)        20                            19                            
  store i32 %28, i32* %9, alig... (idx: 1)        20                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %29, i32* %8, alig... (idx: 0)        1                             0                             
  store i32 %28, i32* %9, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %29, i32* %8, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  store i32 %28, i32* %9, alig... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %27, i32* %10, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %27, i32* %10, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %26, i32* %11, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %26, i32* %11, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %27, i32* %10, ali... (idx: 0)        22                            21                            
  store i32 %26, i32* %11, ali... (idx: 1)        22                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %27, i32* %10, ali... (idx: 0)        1                             0                             
  store i32 %26, i32* %11, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %27, i32* %10, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  store i32 %26, i32* %11, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %25, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %25, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %24, i32* %13, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %24, i32* %13, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %25, i32* %12, ali... (idx: 0)        24                            23                            
  store i32 %24, i32* %13, ali... (idx: 1)        24                            23                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %25, i32* %12, ali... (idx: 0)        1                             0                             
  store i32 %24, i32* %13, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %25, i32* %12, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  store i32 %24, i32* %13, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %23, i32* %14, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %23, i32* %14, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %22, i32* %15, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %22, i32* %15, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %23, i32* %14, ali... (idx: 0)        26                            25                            
  store i32 %22, i32* %15, ali... (idx: 1)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %23, i32* %14, ali... (idx: 0)        1                             0                             
  store i32 %22, i32* %15, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %23, i32* %14, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  store i32 %22, i32* %15, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %21, i32* %16, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %21, i32* %16, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %20, i32* %17, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %20, i32* %17, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %21, i32* %16, ali... (idx: 0)        28                            27                            
  store i32 %20, i32* %17, ali... (idx: 1)        28                            27                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %21, i32* %16, ali... (idx: 0)        1                             0                             
  store i32 %20, i32* %17, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %21, i32* %16, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  store i32 %20, i32* %17, ali... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB__19
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %indvar, i32* %18,... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %indvar, i32* %18,... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %i.01, i32* %3, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %i.01, i32* %3, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %indvar, i32* %18,... (idx: 0)        30                            29                            
  store i32 %i.01, i32* %3, al... (idx: 1)        30                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %indvar, i32* %18,... (idx: 0)        1                             0                             
  store i32 %i.01, i32* %3, al... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %indvar, i32* %18,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
  store i32 %i.01, i32* %3, al... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %37 = load i32* %scevgep, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load i32* %scevgep, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load i32* %scevgep, al... (idx: 0)        22                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %37 = load i32* %scevgep, al... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %37 = load i32* %scevgep, al... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %40 = add nsw i32 %j.02.i, 1 (idx: 0)           12                            10                            10                            10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %40 = add nsw i32 %j.02.i, 1 (idx: 0)           0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %40 = add nsw i32 %j.02.i, 1 (idx: 0) -> main_signed_add_32_1 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %35 = sub i32 15, %j.02.i (idx: 0)              10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %35 = sub i32 15, %j.02.i (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = sub i32 15, %j.02.i (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %36 = load i32* %scevgep2, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  %36 = load i32* %scevgep2, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load i32* %scevgep2, a... (idx: 0)        22                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %36 = load i32* %scevgep2, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i32* %scevgep2, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     
  %38 = mul nsw i32 %37, %36 (idx: 0)             20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     
  %38 = mul nsw i32 %37, %36 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = mul nsw i32 %37, %36 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %39 = add nsw i32 %38, %temp... (idx: 0)        22                            21                            20                            20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %39 = add nsw i32 %38, %temp... (idx: 0)        0                             0                             1                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %39 = add nsw i32 %38, %temp... (idx: 0) -> main_signed_add_32_2 (mux inputs: 2)
State: LEGUP_F_main_BB_FIRFilterStreamingexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %41 = add i32 %.0.i, %total.... (idx: 0)        22                            21                            22                            20                            20                            
  %indvar.next = add i32 %indv... (idx: 1)        2                             11                            12                            10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          
  %41 = add i32 %.0.i, %total.... (idx: 0)        0                             0                             0                             1                             0                             
  %indvar.next = add i32 %indv... (idx: 1)        1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %indvar.next = add i32 %indv... (idx: 1) -> main_signed_add_32_0 (mux inputs: 2)
  %41 = add i32 %.0.i, %total.... (idx: 0) -> main_signed_add_32_3 (mux inputs: 2)

